// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using info;

#nullable disable

namespace SyncOS_API.Migrations
{
    [DbContext(typeof(APPDbContext))]
    [Migration("20230201124633_CedenteCarteira")]
    partial class CedenteCarteira
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Modelos.Atualizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Backup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataVersao")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeiaMe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pacote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDescompactar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Script")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoAtualizacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Versao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Atualizacoes");
                });

            modelBuilder.Entity("Modelos.Boleto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Baixa")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Base64Pdf")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Cancelado")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("CarteiraId")
                        .HasColumnType("int");

                    b.Property<string>("Carteira_Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Emissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstrucoesLinha1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstrucoesLinha2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinhaDigitavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MoraDia")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("NossoNumero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pagador_Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Pagamento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PercentualMulta")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RemessaId")
                        .HasColumnType("int");

                    b.Property<int>("SacadoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusTituloId")
                        .HasColumnType("int");

                    b.Property<string>("Status_Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("Vencimento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraId");

                    b.HasIndex("SacadoId");

                    b.HasIndex("StatusTituloId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("Modelos.Carteira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Agencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Banco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CedenteId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DVAgencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DVBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DVConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DVConvenio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCarteira")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Variacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CedenteId");

                    b.ToTable("Carteiras");
                });

            modelBuilder.Entity("Modelos.Cedente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoCedente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cedentes");
                });

            modelBuilder.Entity("Modelos.CentroReceita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CentroReceitas");
                });

            modelBuilder.Entity("Modelos.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CPF_CNPJ")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("ChaveCSC")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ChaveFlexDocs")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ChaveManifesto")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Desativado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fantasia")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LatitudeLongitude")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Razao")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resp_CEP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Resp_CPF")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Resp_Cidade")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resp_Endereco")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resp_Nome")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resp_Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Resp_UF")
                        .HasColumnType("Char(2)");

                    b.Property<int>("RevendaId")
                        .HasColumnType("int");

                    b.Property<string>("UFId")
                        .HasColumnType("Char(2)");

                    b.Property<DateTime?>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorContrato")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorContratoBackup")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Modelos.GeradorID", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UltimoID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Generators");
                });

            modelBuilder.Entity("Modelos.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<string>("UFId")
                        .HasColumnType("Char(2)");

                    b.HasKey("Id");

                    b.HasIndex("UFId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Modelos.Retorno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Baixa")
                        .HasColumnType("datetime2");

                    b.Property<int>("BoletoId")
                        .HasColumnType("int");

                    b.Property<int>("CodigoOcorrencia")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SacadoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Retornos");
                });

            modelBuilder.Entity("Modelos.Revenda", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Revendas");
                });

            modelBuilder.Entity("Modelos.Sacado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CentroReceitaId")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBloqueado")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDesativado")
                        .HasColumnType("bit");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ValorContrato")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Sacados");
                });

            modelBuilder.Entity("Modelos.StatusTitulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusTitulo");
                });

            modelBuilder.Entity("Modelos.TipoAPP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposAPP");
                });

            modelBuilder.Entity("Modelos.UF", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("Char(2)");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("UFs");
                });

            modelBuilder.Entity("Modelos.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginPass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Modelos.Boleto", b =>
                {
                    b.HasOne("Modelos.Carteira", "Carteira")
                        .WithMany()
                        .HasForeignKey("CarteiraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelos.Sacado", "Sacado")
                        .WithMany()
                        .HasForeignKey("SacadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelos.StatusTitulo", "Status")
                        .WithMany()
                        .HasForeignKey("StatusTituloId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Carteira");

                    b.Navigation("Sacado");

                    b.Navigation("Status");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Modelos.Carteira", b =>
                {
                    b.HasOne("Modelos.Cedente", "Cedente")
                        .WithMany()
                        .HasForeignKey("CedenteId");

                    b.Navigation("Cedente");
                });

            modelBuilder.Entity("Modelos.Municipio", b =>
                {
                    b.HasOne("Modelos.UF", "UF")
                        .WithMany()
                        .HasForeignKey("UFId");

                    b.Navigation("UF");
                });
#pragma warning restore 612, 618
        }
    }
}
